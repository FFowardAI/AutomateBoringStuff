{
    "info": {
        "_postman_id": "f4a1b2c3-d4e5-f6a7-b8c9-d0e1f2a3b4c5",
        "name": "AutomateBoringStuff - 2 - Supabase Server",
        "description": "API collection for the Supabase backend of AutomateBoringStuff.",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "_exporter_id": "0"
    },
    "item": [
        {
            "name": "Users",
            "item": [
                {
                    "name": "List Users",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/users",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "users"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get User by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/users/:id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "users",
                                ":id"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "<user_uuid>",
                                    "description": "UUID of the user to retrieve"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create User",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"test@example.com\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/users",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "users"
                            ]
                        }
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Sessions",
            "item": [
                {
                    "name": "List Sessions",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/sessions",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "sessions"
                            ]
                        },
                        "description": "Returns all sessions. Add `?user_id=<uuid>` query param for filtering (requires backend implementation/security)."
                    },
                    "response": []
                },
                {
                    "name": "Get Session by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/sessions/:id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "sessions",
                                ":id"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "<session_uuid>",
                                    "description": "UUID of the session"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Start Session",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"user_id\": \"<user_uuid>\",\n    \"context\": \"Initial context for the recording session.\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/sessions",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "sessions"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "End Session",
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/sessions/:id/end",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "sessions",
                                ":id",
                                "end"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "<session_uuid>",
                                    "description": "UUID of the session to end"
                                }
                            ]
                        }
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Recordings",
            "item": [
                {
                    "name": "List Recordings for Session",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/recordings?session_id=<session_uuid>",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "recordings"
                            ],
                            "query": [
                                {
                                    "key": "session_id",
                                    "value": "<session_uuid>",
                                    "description": "Filter recordings by this session UUID"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get Recording by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/recordings/:id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "recordings",
                                ":id"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "<recording_uuid>",
                                    "description": "UUID of the recording"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Recording",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"session_id\": \"<session_uuid>\",\n    \"start_time\": \"2024-01-01T10:00:00Z\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/recordings",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "recordings"
                            ]
                        },
                        "description": "Creates a new recording with just the start time. No end_time is needed until recording is complete."
                    },
                    "response": []
                },
                {
                    "name": "End Recording",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"end_time\": \"2024-01-01T10:05:00Z\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/recordings/:id/end",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "recordings",
                                ":id",
                                "end"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "<recording_uuid>",
                                    "description": "UUID of the recording to end"
                                }
                            ]
                        },
                        "description": "Ends a recording by setting the end_time. If no end_time is provided, the current time is used."
                    },
                    "response": []
                },
                {
                    "name": "Finalize Recording & Generate Script",
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "files",
                                    "type": "file",
                                    "src": [],
                                    "description": "(Optional) Images to upload. If images were already uploaded separately, this is not needed. Supports multiple files."
                                },
                                {
                                    "key": "sequence",
                                    "value": "0",
                                    "type": "text",
                                    "description": "(Optional) Starting sequence number for images"
                                },
                                {
                                    "key": "captured_at",
                                    "value": "",
                                    "type": "text",
                                    "description": "(Optional) Capture timestamp for images"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/recordings/:id/finalize",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "recordings",
                                ":id",
                                "finalize"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "<recording_uuid>",
                                    "description": "UUID of the recording to finalize"
                                }
                            ]
                        },
                        "description": "Finalizes a recording, optionally uploads images, and generates a script via the VLM service. Can be called with or without images."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Images",
            "item": [
                {
                    "name": "List Images for Recording",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/images?recording_id=<recording_uuid>",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "images"
                            ],
                            "query": [
                                {
                                    "key": "recording_id",
                                    "value": "<recording_uuid>",
                                    "description": "Filter images by this recording UUID"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Upload Image",
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "files",
                                    "type": "file",
                                    "src": [],
                                    "description": "Image files to upload. Supports multiple files."
                                },
                                {
                                    "key": "recording_id",
                                    "value": "<recording_uuid>",
                                    "type": "text"
                                },
                                {
                                    "key": "sequence",
                                    "value": "1",
                                    "type": "text",
                                    "description": "(Optional) Starting sequence number for the images"
                                },
                                {
                                    "key": "captured_at",
                                    "value": "2024-01-01T10:01:15Z",
                                    "type": "text",
                                    "description": "(Optional) Timestamp when images were captured"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/images",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "images"
                            ]
                        },
                        "description": "Upload image files using multipart/form-data. Supports multiple file uploads."
                    },
                    "response": []
                },
                {
                    "name": "Get Image Metadata",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/images/:id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "images",
                                ":id"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "<image_uuid>",
                                    "description": "UUID of the image metadata record"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Delete Image",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/images/:id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "images",
                                ":id"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "<image_uuid>",
                                    "description": "UUID of the image to delete (metadata + file)"
                                }
                            ]
                        }
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Scripts",
            "item": [
                {
                    "name": "List Scripts for Session",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/scripts?session_id=<session_uuid>",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "scripts"
                            ],
                            "query": [
                                {
                                    "key": "session_id",
                                    "value": "<session_uuid>",
                                    "description": "Filter scripts by this session UUID"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get Script by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/scripts/:id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "scripts",
                                ":id"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "<script_uuid>",
                                    "description": "UUID of the script"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Script Record",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"session_id\": \"<session_uuid>\",\n    \"content\": \"console.log('Generated script content');\",\n    \"status\": \"completed\" \n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/scripts",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "scripts"
                            ]
                        },
                        "description": "Typically called internally after VLM generates a script."
                    },
                    "response": []
                },
                {
                    "name": "Update Script",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"content\": \"console.log('Updated script content');\",\n    \"status\": \"completed\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/scripts/:id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "scripts",
                                ":id"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "<script_uuid>",
                                    "description": "UUID of the script to update"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Delete Script",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/scripts/:id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "scripts",
                                ":id"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "<script_uuid>",
                                    "description": "UUID of the script to delete"
                                }
                            ]
                        }
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Activations",
            "item": [
                {
                    "name": "List Activations for User",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/activations?user_id=<user_uuid>",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "activations"
                            ],
                            "query": [
                                {
                                    "key": "user_id",
                                    "value": "<user_uuid>",
                                    "description": "Filter activations by user UUID (ideally get from auth)"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get Activation by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/activations/:id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "activations",
                                ":id"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "<activation_uuid>",
                                    "description": "UUID of the activation record"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Activate Script",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"user_id\": \"<user_uuid>\",\n    \"script_id\": \"<script_uuid>\",\n    \"context\": \"Run this script with these specific instructions.\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/activations",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "activations"
                            ]
                        },
                        "description": "Creates an activation record and queues a compute job."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Compute Jobs",
            "item": [
                {
                    "name": "List Compute Jobs",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/compute_jobs",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "compute_jobs"
                            ]
                        },
                        "description": "Lists all compute jobs (requires proper authorization)."
                    },
                    "response": []
                },
                {
                    "name": "Get Compute Job by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/compute_jobs/:id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "compute_jobs",
                                ":id"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "<job_uuid>",
                                    "description": "UUID of the compute job"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Update Compute Job Status",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"status\": \"running\", \n    \"result\": \"Job execution started...\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/compute_jobs/:id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "compute_jobs",
                                ":id"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "<job_uuid>",
                                    "description": "UUID of the compute job to update"
                                }
                            ]
                        },
                        "description": "Typically called by the compute service to report progress/completion."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Notifications",
            "item": [
                {
                    "name": "List Notifications for User",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/notifications?user_id=<user_uuid>&unread_only=true",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "notifications"
                            ],
                            "query": [
                                {
                                    "key": "user_id",
                                    "value": "<user_uuid>",
                                    "description": "Filter by user UUID (ideally get from auth)"
                                },
                                {
                                    "key": "unread_only",
                                    "value": "true",
                                    "description": "(Optional) Set to true to only get unread notifications"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Mark Notification as Read",
                    "request": {
                        "method": "PUT",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/notifications/:id/read",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "notifications",
                                ":id",
                                "read"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "<notification_uuid>",
                                    "description": "UUID of the notification to mark as read"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Mark All Notifications Read",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"user_id\": \"<user_uuid>\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/notifications/read-all",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "notifications",
                                "read-all"
                            ]
                        },
                        "description": "Marks all unread notifications for the specified user as read."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "VLM",
            "item": [
                {
                    "name": "Analyze Images & Generate Script",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"recording_id\": \"<recording_uuid>\",\n    \"session_id\": \"<session_uuid>\",\n    \"use_default_prompt\": true,\n    \"custom_prompt\": \"Optional additional instructions for the analysis\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/vlm/analyze",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "vlm",
                                "analyze"
                            ]
                        },
                        "description": "Analyzes all images from a recording and generates an automation script. The script is saved to the database and linked to the session. This endpoint gets all chronologically ordered images for the recording, analyzes them with Claude, and creates a detailed step-by-step script to reproduce the workflow."
                    },
                    "response": []
                }
            ]
        }
    ],
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        },
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        }
    ],
    "variable": [
        {
            "key": "baseUrl",
            "value": "http://localhost:8001",
            "type": "string",
            "description": "Base URL for the AutomateBoringStuff server"
        }
    ]
}